<Window x:Class="DispatchListCreator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DispatchListCreator"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:enums="clr-namespace:DispatchListCreator.Model"
        xmlns:vm="clr-namespace:DispatchListCreator.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:MainViewModel}"
        x:Name="Okno"
        Title="Dispatch List Creator" Height="450" Width="950">
        <!--xmlns:system="clr-namespace:System;assembly=System"-->
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Width" Value="100"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type CheckBox}" x:Key="CheckboxStyle">
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Width" Value="100"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <ObjectDataProvider MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}"
                                x:Key="MarketValues">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="enums:Market"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
         <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <DataGrid x:Name="datagridResult"
                  Grid.Row="0" Grid.Column="0"
                  ItemsSource="{Binding SummaryBatches}"
                  AutoGenerateColumns="False" 
                  HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch"
                  Margin="10 10 10 50" 
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  VirtualizingPanel.IsVirtualizing="True">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Kraj" Binding="{Binding Country}" 
                                    Width="Auto" IsReadOnly="True"/>
                <DataGridTextColumn Header="Liczba przesyłek" Binding="{Binding CountDeliveries}" 
                                    Width="Auto" IsReadOnly="True"/>
                <DataGridTextColumn Header="Batch DMS" Binding="{Binding BatchNumber}" 
                                    Width="Auto" IsReadOnly="True" />
                <DataGridTextColumn Header="Batch SAP" Binding="{Binding SapBatchNumber}" 
                                    Width="Auto" IsReadOnly="True" />
                <DataGridTextColumn Header="Trackingi" Binding="{Binding FilledTracking}" 
                                    Width="Auto" IsReadOnly="True" />
                <DataGridTextColumn Header="Oczekiwane trackingi" Binding="{Binding ExpectedTracking}" 
                                    Width="Auto" IsReadOnly="True"/>
                <DataGridTextColumn Header="Wycofania" Binding="{Binding RemovedPacks}" 
                                    Width="Auto" IsReadOnly="True" />
                <DataGridTextColumn Header="Wstrzymania" Binding="{Binding SuspendPacks}" 
                                    Width="*" IsReadOnly="True" />

                <!--<DataGridTextColumn Header="Dispatch Date" Binding="{Binding DispatchDate}" Width="*" />-->
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="0" Grid.Column="1"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        Margin="3 0"
                        Orientation="Vertical"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Center">

                <Label Content="Data fakturowania"
                       HorizontalAlignment="Center"
                       />

                <Label Content="Od:"/>
                <DatePicker x:Name="DatePikerFrom"
                            HorizontalAlignment="Stretch"
                            SelectedDate="{Binding MergeDateTimeFrom,
                                Mode=TwoWay}"
                            Height="30" Width="auto"
                            Margin="0 3" 
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"/>
                
                <Label Content="Do:"/>
                <DatePicker x:Name="DatePikerTo"
                            HorizontalAlignment="Stretch"
                            SelectedDate="{Binding MergeDateTimeTo,
                                Mode=TwoWay}"
                            Height="30" Width="auto"
                            Margin="0 3" 
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"/>

                <Label Content="Wybierz kraje:"
                       HorizontalAlignment="Center"
                       />

                <CheckBox x:Name="cbPl"
                          Style="{StaticResource CheckboxStyle}"
                          Content="Polska"
                          IsChecked="{Binding IsPlChecked}"
                          Tag="PL"/>

                <CheckBox x:Name="cbCz"
                          Style="{StaticResource CheckboxStyle}"
                          Content="Czechy"
                          IsChecked="{Binding IsCzChecked}"
                          Tag="CZ"/>

                <CheckBox x:Name="cbSk" 
                          Style="{StaticResource CheckboxStyle}"
                          Content="Słowacja"
                          IsChecked="{Binding IsSkChecked}"
                          Tag="SK"/>

                <CheckBox x:Name="cbHu" 
                          Style="{StaticResource CheckboxStyle}"
                          Content="Węgry"
                          IsChecked="{Binding IsHuChecked}"
                          Tag="HU"/>

                <!--<ListView x:Name="marketsList" 
                          ItemsSource="{Binding Source={StaticResource MarketValues}}"
                          SelectionMode="Multiple"
                     >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding MarketsSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="{Binding}">
                                    <CheckBox.Template>
                                        <ControlTemplate TargetType="CheckBox">
                                            <StackPanel Orientation="Vertical">
                                                <CheckBox Content="{TemplateBinding Content}"
                                                          IsChecked="{Binding Path=IsSelected, 
                                                                              RelativeSource={RelativeSource FindAncestor, 
                                                                                                             AncestorType={x:Type ListViewItem}} }"/>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </CheckBox.Template>
                                </CheckBox>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>-->
                    
            </StackPanel>
            

            <StackPanel Grid.Column="1"
                        Margin="3 0"
                        Orientation="Vertical"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Center">

                <Label Content="Akcje" HorizontalAlignment="Center"
                       />

                <Button Content="Pobierz dane" 
                        Style="{StaticResource ButtonStyle}"
                        Command="{Binding GetDispatchDataCommand}"
                        VerticalAlignment="Center"/>



                <Button x:Name="btnGenerate"
                        Style="{StaticResource ButtonStyle}"
                        Content="Generuj plik csv"
                        Command="{Binding GenerateCsvFileCommand}"
                        VerticalAlignment="Center"/>


                <Button x:Name="btnGenerateAsync"
                        Style="{StaticResource ButtonStyle}"
                        Content="Pobierz dane async"
                        Command="{Binding GetDispatchDataCommandAsync}"
                        VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>

        <Grid Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
              Background="Black" 
              Opacity="0.5" 
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
              ZIndex="1000">
            <TextBlock Text="Ładowanie..." 
                       Foreground="White" 
                       HorizontalAlignment="Center" VerticalAlignment="Center" 
                       FontSize="20"/>
        </Grid>
        
    </Grid>
</Window>
